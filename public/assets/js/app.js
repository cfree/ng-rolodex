!function(){"use strict";angular.module("rdApp",["ngRoute"])}(),function(){"use strict";angular.module("rdApp","").config(["$routeProvider","$locationProvider",function(t,n){t.when("/",{templateUrl:"/app/contacts/default.html"}).when("/edit/:id",{templateUrl:"/app/contacts/edit.html",controller:"EditController as vm"}).when("/add",{templateUrl:"/app/contacts/edit.html",controller:"AddController as vm"}).otherwise({redirectTo:"/"}),n.html5Mode(!0)}])}(),function(){"use strict";function t(){var t=this;t.titlePrefix="Add"}angular.module("rdApp").controller("AddController",t)}(),function(){"use strict";function t(t,n,e){function o(){console.log("clicked");var n=window.confirm("You are about to delete the contact for "+c.contact.fullName+". Press OK to confirm.");return n?e.deleteContact(c.id).then(function(){alert("The contact for "+c.contact.fullName+" has been deleted."),t.path("/")}):void 0}function r(t){return e.getContact(t).then(function(t){return c.contact=t.data,c.contact.fullName=c.contact.firstName+" "+c.contact.lastName,c.contact})}var c=this;c.titlePrefix="Edit",c.showDelete=!0,c.id=n.id,c.deleteContact=o,r(c.id)}angular.module("rdApp").controller("EditController",t),t.$inject=["$location","$routeParams","contactsService"]}(),function(){"use strict";function t(){function t(){console.log(e)}function n(t){return"CA"===t?!0:!1}var e=this;e.submitForm=t,e.isCanada=n}angular.module("rdApp").controller("FormController",t)}(),function(){"use strict";function t(t){t.selectedContactId="5522134c2aa3c0b86c6f497e"}angular.module("rdApp").controller("ListController",t),t.$inject=["$rootScope"]}(),function(){"use strict";function t(t,n,e,o){function r(){return o.getContacts().then(function(t){return a.contacts=t.data,a.contacts})}function c(e){var o=t.path();return"tbd"===e&&"add"===o.substr(1)?!0:null!==typeof n.id&&n.id===e?!0:!1}var a=this;a.isCurrentPage=c,a.activeItem=null,r(),e.$watch(function(){return t.path()},function(t){"/"===t&&(a.activeItem=null)})}angular.module("rdApp").controller("SecondaryController",t),t.$inject=["$location","$routeParams","$scope","contactsService"]}(),function(){"use strict";function t(){return{restrict:"A",templateUrl:"app/contacts/secondary.html",controller:"SecondaryController",controllerAs:"vm"}}angular.module("rdApp").directive("rdSecondary",t)}(),function(){"use strict";function t(t){var n=function(){return t({method:"GET",url:"/api/contacts/"})},e=function(n){return t({method:"GET",url:"/api/contacts/"+n})},o=function(n){return t({method:"DELETE",url:"/api/contacts/"+n})};return{getContacts:function(){return n()},getContact:function(t){return e(t)},deleteContact:function(t){return o(t)}}}angular.module("rdApp").factory("contactsService",t),t.$inject=["$http","$q"]}();
//# sourceMappingURL=data:application/json;base64,