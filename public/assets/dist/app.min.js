!function(){"use strict";angular.module("rdApp",["ngRoute"])}(),function(){"use strict";angular.module("rdApp","").config(["$routeProvider","$locationProvider",function(t,n){t.when("/",{templateUrl:"/app/contacts/default.html"}).when("/edit/:id",{templateUrl:"/app/contacts/edit.html",controller:"EditController as vm"}).when("/add",{templateUrl:"/app/contacts/edit.html",controller:"AddController as vm"}).otherwise({redirectTo:"/"}),n.html5Mode(!0)}])}(),function(){"use strict";function t(t,n,e){function o(o){return e.addContact(o).then(function(e){n.path("/edit/"+e.data._id),t.location.reload()})}var r=this;r.titlePrefix="Add",r.buttonLabel="Add Contact",r.submitForm=o}angular.module("rdApp").controller("AddController",t),t.$inject=["$window","$location","contactsService"]}(),function(){"use strict";function t(t,n,e,o){function r(){var e=window.confirm("You are about to delete this contact. Press OK to confirm.");return e?o.deleteContact(a.id).then(function(){alert("The contact has been deleted."),n.path("/"),t.location.reload()}):void 0}function c(e){return o.updateContact(a.id,e).then(function(e){a.contact=e.data,a.recordUpdated=!0,n.path("/edit/"+e.data._id),t.location.reload()})}var a=this;a.titlePrefix="Edit",a.buttonLabel="Update Contact",a.showDelete=!0,a.id=e.id,a.deleteContact=r,a.submitForm=c,a.recordUpdated=!1}angular.module("rdApp").controller("EditController",t),t.$inject=["$window","$location","$routeParams","contactsService"]}(),function(){"use strict";function t(t,n){function e(t){return"CA"===t?!0:!1}function o(n){return t.getContact(n).then(function(t){var n=t.data;n.fullName=n.firstName+" "+n.lastName,r.user=n})}var r=this,c=n.id;r.user={},r.isCanada=e,"undefined"!=typeof c&&o(c)}angular.module("rdApp").controller("FormController",t),t.$inject=["contactsService","$routeParams"]}(),function(){"use strict";function t(t){t.selectedContactId="5522134c2aa3c0b86c6f497e"}angular.module("rdApp").controller("ListController",t),t.$inject=["$rootScope"]}(),function(){"use strict";function t(t,n,e,o){function r(){return o.getContacts().then(function(t){return a.contacts=t.data,a.contacts})}function c(e){var o=t.path();return"tbd"===e&&"add"===o.substr(1)?!0:null!==typeof n.id&&n.id===e?!0:!1}var a=this;a.isCurrentPage=c,a.activeItem=null,r(),e.$watch(function(){return t.path()},function(t){"/"===t&&(a.activeItem=null)})}angular.module("rdApp").controller("SecondaryController",t),t.$inject=["$location","$routeParams","$scope","contactsService"]}(),function(){"use strict";function t(){return{restrict:"A",templateUrl:"app/contacts/secondary.html",controller:"SecondaryController",controllerAs:"vm"}}angular.module("rdApp").directive("rdSecondary",t)}(),function(){"use strict";function t(t){var n=function(){return t({method:"GET",url:"/api/contacts/"})},e=function(n){return t({method:"GET",url:"/api/contacts/"+n})},o=function(n){return t({method:"DELETE",url:"/api/contacts/"+n})},r=function(n){return t({method:"POST",url:"/api/contacts/",data:n})},c=function(n,e){return t({method:"PUT",url:"/api/contacts/"+n,data:e})};return{getContacts:function(){return n()},getContact:function(t){return e(t)},deleteContact:function(t){return o(t)},addContact:function(t){return r(t)},updateContact:function(t,n){return c(t,n)}}}angular.module("rdApp").factory("contactsService",t),t.$inject=["$http","$q"]}();